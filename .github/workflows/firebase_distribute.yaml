name: Unity Build and Distribute (Android Only)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build Unity Project (Android)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Clean up Docker space
        run: docker system prune -a -f

      - name: Cache Unity Library
        uses: actions/cache@v4.2.0
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Run the build for Android
        uses: game-ci/unity-builder@v4.3.0
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: Android
          buildsPath: Build/Android
          unityVersion: '6000.0.38f1'
          buildName: 'MyAndroidApp'
          versioning: Custom
          version: '1.0.0'

      - name: Upload the Build for Android
        uses: actions/upload-artifact@v4.6.0
        with:
          name: Build-Android
          path: Build/Android/*.apk

  deploy:
    name: Distribute Android APK via Firebase App Distribution
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Download Build Artifact
        uses: actions/download-artifact@v4.1.9
        with:
          name: Build-Android

      - name: Deploy Android APK via Firebase
        uses: w9jds/firebase-action@v13.32.0
        with:
          args: "appdistribution:distribute $(find Build/Android -name '*.apk') --app ${{ secrets.FIREBASE_ANDROID_APP_ID }} --groups 'testers' --release-notes 'Automated build release from GitHub Actions'"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
