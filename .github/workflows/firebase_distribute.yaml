name: Unity Build and Distribute (Android Only)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build Unity Project (Android)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      # ディスク容量の確保
      - name: Free disk space
        run: |
          sudo swapoff -a && sudo rm -f /swapfile
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc /usr/local/.ghcup
          sudo apt-get remove -y google-cloud-cli || sudo apt-get remove -y google-cloud-sdk
          sudo apt-get autoremove -y && sudo apt-get clean
          docker system prune -af
          df -h

      - name: Clean up Docker space (with volumes)
        run: docker system prune --volumes -a -f

      - name: Cache Unity Library
        uses: actions/cache@v4.2.0
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Run the build for Android
        uses: game-ci/unity-builder@v4.3.0
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: Android           # ビルド対象プラットフォーム
          buildsPath: build                 # 出力フォルダ（小文字の "build" を使用）
          buildName: MyAndroidApp           # ビルド名（生成されるファイル名は MyAndroidApp.apk）
          androidExportType: androidPackage # 出力形式: APKをビルド
          unityVersion: '6000.0.38f1'       # 実際のUnityバージョンに合わせて変更

      - name: Upload the Build for Android
        uses: actions/upload-artifact@v4.6.0
        with:
          name: Build-Android
          path: build/Android/MyAndroidApp.apk

      - name: Install & Distribute in one step
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby-full
          
          # Bundler をユーザー領域にインストール
          gem install bundler --user-install
          
          # Ruby バージョンに依存せず、確実にGemのユーザーディレクトリを取得
          export GEM_HOME="$(ruby -r rubygems -e 'puts Gem.user_dir')"
          export PATH="$GEM_HOME/bin:$PATH"
          
          # Gemfile 作成
          echo "source 'https://rubygems.org'" > Gemfile
          echo "gem 'fastlane'" >> Gemfile
          echo "gem 'fastlane-plugin-firebase_app_distribution'" >> Gemfile
          
          # プロジェクト内にライブラリをインストール
          bundle install --path vendor/bundle
          
          # Service Account
          echo "${{ secrets.GCP_SA_KEY }}" > service_account.json
          
          # Fastlane でアップロード
          bundle exec fastlane run firebase_app_distribution \
            apk_path:"build/Android/MyAndroidApp.apk" \
            app:"${{ secrets.FIREBASE_ANDROID_APP_ID }}" \
            service_credentials_file:"service_account.json" \
            release_notes:"Release from GitHub Actions" \
            groups:"testers"


